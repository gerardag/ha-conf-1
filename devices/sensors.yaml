# - platform: yr
# - platform: mqtt
#   name: Exterior Temperature MQTT
#   state_topic: "ble/exterior/temperature"
#   unit_of_measurement: "°C"
# - platform: mqtt
#   name: Exterior Humidity MQTT
#   state_topic: "ble/exterior/humidity"
#   unit_of_measurement: "%"
# - platform: mqtt
#   name: Dormitori Temperature MQTT
#   state_topic: "ble/dormitori/temperature"
#   unit_of_measurement: "°C"
# - platform: mqtt
#   name: Dormitori Humidity MQTT
#   state_topic: "ble/dormitori/humidity"
#   unit_of_measurement: "%"
# - platform: mqtt
#   name: Menjador Temperature MQTT
#   state_topic: "ble/menjador/temperature"
#   unit_of_measurement: "°C"
# - platform: mqtt
#   name: Menjador Humidity MQTT
#   state_topic: "ble/menjador/humidity"
#   unit_of_measurement: "%"
- platform: mqtt
  name: pi4 speedtest download
  state_topic: "system/pi4/speedtest/download"
  unit_of_measurement: "Mbps"
- platform: mqtt
  name: pi4 speedtest upload
  state_topic: "system/pi4/speedtest/upload"
  unit_of_measurement: "Mbps"
- platform: mqtt
  name: pi4 speedtest ping
  state_topic: "system/pi4/speedtest/ping"
  unit_of_measurement: "ms"
- platform: mqtt
  name: pi3a speedtest download
  state_topic: "system/pi3a/speedtest/download"
  unit_of_measurement: "Mbps"
- platform: mqtt
  name: pi3a speedtest upload
  state_topic: "system/pi3a/speedtest/upload"
  unit_of_measurement: "Mbps"
- platform: mqtt
  name: pi3a speedtest ping
  state_topic: "system/pi3a/speedtest/ping"
  unit_of_measurement: "ms"
- platform: mqtt
  name: pizw speedtest download
  state_topic: "system/pizw/speedtest/download"
  unit_of_measurement: "Mbps"
- platform: mqtt
  name: pizw speedtest upload
  state_topic: "system/pizw/speedtest/upload"
  unit_of_measurement: "Mbps"
- platform: mqtt
  name: pizw speedtest ping
  state_topic: "system/pizw/speedtest/ping"
  unit_of_measurement: "ms"
# - platform: mitemp_bt
#   mac: !secret mac_temp_mi_dormitori
#   monitored_conditions:
#     - temperature
#     - humidity
#   scan_interval: 120
#   retries: 1
#   timeout: 10
#   median: 1
#   name: Dormitori
# - platform: mitemp_bt
#   mac: !secret mac_temp_mi_menjador
#   monitored_conditions:
#     - temperature
#     - humidity
#   scan_interval: 120
#   retries: 1
#   timeout: 10
#   median: 1
#   name: Menjador
- platform: beewi_smartclim
  mac: !secret mac_temp_beewi_exterior
  name: Exterior
  scan_interval: 60
# - platform: github
#   access_token: !secret github_access_token
#   repositories:
#     - path: "alemuro/ha-conf"
- platform: waqi
  token: !secret waqi_api_key
  locations:
    - barcelona
- platform: google_travel_time
  name: "Home to Work car"
  scan_interval: 3600
  api_key: !secret google_api_key
  origin: !secret home_address
  destination: !secret work_address_aleix
  options:
    mode: driving
# - platform: google_travel_time
#   name: "Home to Work bus"
#   scan_interval: 3600
#   api_key: !secret google_api_key
#   origin: !secret home_address
#   destination: !secret work_addres_aleix
#   options:
#     mode: transit
#     transit_mode: bus
- platform: google_travel_time
  name: "Work to home car"
  scan_interval: 3600
  api_key: !secret google_api_key
  destination: !secret home_address
  origin: !secret work_address_aleix
  options:
    mode: driving
# - platform: google_travel_time
#   name: "Work to home bus"
#   scan_interval: 3600
#   api_key: !secret google_api_key
#   destination: !secret home_address
#   origin: !secret work_addres_aleix
#   options:
#     mode: transit
#     transit_mode: bus
# - platform: history_stats
#   name: Time at home
#   entity_id: device_tracker.aleix_mobil
#   state: "home"
#   type: time
#   start: "{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}"
#   end: "{{ now() }}"
# - platform: history_stats
#   name: Time at work
#   entity_id: device_tracker.aleix_mobil
#   state: "Feina"
#   type: time
#   start: "{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}"
#   end: "{{ now() }}"
# - platform: history_stats
#   name: Time other
#   entity_id: device_tracker.aleix_mobil
#   state: "fora"
#   type: time
#   start: "{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}"
#   end: "{{ now() }}"
- platform: time_date 
  display_options:
    - 'time'
    - 'date'
    - 'date_time'
    - 'date_time_iso'
    - 'time_date'
    - 'time_utc'
    - 'beat'
- platform: tmb
  app_id: !secret tmb_app_id
  app_key: !secret tmb_app_key
  stops:
    - line: V21
      stop: 366
      name: Casa
- platform: citybikes
  name: Casa
  latitude: !secret latitude
  longitude: !secret longitude
  radius: 200


- platform: steam_online
  api_key: !secret steam_api_key
  accounts:
    - !secret steam_account_id_aleix
    - !secret steam_account_id_imma

- platform: twitch
  client_id: !secret twitch_client_id
  token: !secret twitch_token
  channels:
    - ibai
    - iamcristinini
    - outconsumer
    - ernesbarbeq

- platform: scrape
  name: Ibai scrape
  resource: 'https://www.youtube.com/feeds/videos.xml?channel_id=UCaY_-ksFSQtTGk0y1HA_3YQ'
  select: yt\:videoid

- platform: scrape
  name: Cintigar scrape
  resource: 'https://www.youtube.com/feeds/videos.xml?channel_id=UCGOyDWpNs644AInjqNuhRyg'
  select: yt\:videoid


###############
#  Templates  #
###############
- platform: template
  sensors:
    solar_angle:
      friendly_name: "Sun Angle"
      unit_of_measurement: '°'
      value_template: "{{ '%+.1f'|format(state_attr('sun.sun', 'elevation')) }}"
    aleix_velocity:
      friendly_name: "Aleix velocity"
      unit_of_measurement: 'km/h'
      value_template: "{{ state_attr('device_tracker.aleix_s10e', 'velocity') }}"
    mesa_percent:
      friendly_name: Taula %
      unit_of_measurement: '%'
      value_template: >-
        {% if is_state('light.livingroom_light_1', 'on') %}
        {{ (state_attr('light.livingroom_light_1', 'brightness') / (255/100)) | round(0, 'ceil') }}
        {% else %}
        0
        {% endif %}
    mesita_percent:
      friendly_name: Tauleta %
      unit_of_measurement: '%'
      value_template: >-
        {% if is_state('light.livingroom_light_3', 'on') %}
        {{ (state_attr('light.livingroom_light_3', 'brightness') / (255/100)) | round(0, 'ceil') }}
        {% else %}
        0
        {% endif %}
    sofa_percent:
      friendly_name: Sofà %
      unit_of_measurement: '%'
      value_template: >-
        {% if is_state('light.livingroom_light_2', 'on') %}
        {{ (state_attr('light.livingroom_light_2', 'brightness') / (255/100)) | round(0, 'ceil') }}
        {% else %}
        0
        {% endif %}
    entrada_percent:
      friendly_name: Entrada %
      unit_of_measurement: '%'
      value_template: >-
        {% if is_state('light.entrance_light_1', 'on') %}
        {{ (state_attr('light.entrance_light_1', 'brightness') / (255/100)) | round(0, 'ceil') }}
        {% else %}
        0
        {% endif %}
    cuina_temps_restant_percent:
      friendly_name: Cuina temps restant %
      unit_of_measurement: '%'
      value_template: |
        {% if is_state('automation.cuina_quan_no_hi_hagi_moviment_activar_timer', 'on') %}
        {% set v = (100 - (as_timestamp(now()) - as_timestamp(state_attr('automation.cuina_quan_no_hi_hagi_moviment_activar_timer', 'last_triggered'))) 
          / (600/100)) | round(0, 'ceil') %}
        {{ [([v, 0] | max), 100] | min}}
        {% else %}
        100
        {% endif %}
    entrada_temps_restant_percent:
      friendly_name: Entrada temps restant %
      unit_of_measurement: '%'
      value_template: |
        {% if is_state('automation.entrada_quan_no_hi_hagi_moviment_activar_timer', 'on') %}
        {% set v = (100 - (as_timestamp(now()) - as_timestamp(state_attr('automation.entrada_quan_no_hi_hagi_moviment_activar_timer', 'last_triggered'))) 
          / (300/100)) | round(0, 'ceil') %}
        {{ [([v, 0] | max), 100] | min}}
        {% else %}
        100
        {% endif %}
    moment_dia:
      friendly_name: Moment del dia
      value_template: |
        {%- if as_timestamp(now()) | timestamp_custom('%H') | int < 7 -%}Matinada
        {%- elif as_timestamp(now()) | timestamp_custom('%H') | int < 13 -%}Matí
        {%- elif as_timestamp(now()) | timestamp_custom('%H') | int < 15 -%}Migdia
        {%- elif as_timestamp(now()) | timestamp_custom('%H') | int < 20 -%}Tarda
        {%- elif as_timestamp(now()) | timestamp_custom('%H') | int < 22 -%}Vespre
        {%- else -%}Nit{%- endif -%}
    holaluz_franja_horaria:
      friendly_name: HolaLuz franja horaria
      value_template: |
        {%- if as_timestamp(utcnow()) | timestamp_custom('%H') | int < 11 -%}Vall
        {%- elif as_timestamp(utcnow()) | timestamp_custom('%H') | int < 21 -%}Punta
        {%- else -%}Vall{%- endif -%}
    bedroom_switch_heater_target:
      friendly_name: Calefacció dormitori temperatura objectiu
      unit_of_measurement: "ºC"
      value_template: |
        {%- if as_timestamp(now()) | timestamp_custom('%H') | int < 1 -%}18.5
        {%- elif as_timestamp(now()) | timestamp_custom('%H') | int < 7 -%}18.0
        {%- elif as_timestamp(now()) | timestamp_custom('%H') | int < 13 -%}19.0
        {%- elif as_timestamp(now()) | timestamp_custom('%H') | int < 15 -%}19.5
        {%- elif as_timestamp(now()) | timestamp_custom('%H') | int < 20 -%}19.5
        {%- elif as_timestamp(now()) | timestamp_custom('%H') | int < 22 -%}19.5
        {%- else -%}19.5{%- endif -%}
    calefaccio_menjador_target:
      friendly_name: Calefacció menjador temperatura objectiu
      unit_of_measurement: "ºC"
      value_template: |
        {%- if as_timestamp(now()) | timestamp_custom('%H') | int < 1 -%}18.5
        {%- elif as_timestamp(now()) | timestamp_custom('%H') | int < 7 -%}18.0
        {%- elif as_timestamp(now()) | timestamp_custom('%H') | int < 13 -%}19.0
        {%- elif as_timestamp(now()) | timestamp_custom('%H') | int < 15 -%}19.5
        {%- elif as_timestamp(now()) | timestamp_custom('%H') | int < 20 -%}19.5
        {%- elif as_timestamp(now()) | timestamp_custom('%H') | int < 22 -%}19.5
        {%- else -%}19.5{%- endif -%}
    office_switch_heater_target:
      friendly_name: Calefacció despatx temperatura objectiu
      unit_of_measurement: "ºC"
      value_template: |
        {%- if as_timestamp(now()) | timestamp_custom('%H') | int < 1 -%}18.5
        {%- elif as_timestamp(now()) | timestamp_custom('%H') | int < 7 -%}18.0
        {%- elif as_timestamp(now()) | timestamp_custom('%H') | int < 13 -%}19.5
        {%- elif as_timestamp(now()) | timestamp_custom('%H') | int < 15 -%}19.5
        {%- elif as_timestamp(now()) | timestamp_custom('%H') | int < 20 -%}18.0
        {%- elif as_timestamp(now()) | timestamp_custom('%H') | int < 22 -%}18.0
        {%- else -%}18.0{%- endif -%}
    purificador_aqi:
      friendly_name: Purificador AQI
      unit_of_measurement: "AQI"
      value_template: "{{ state_attr('fan.xiaomi_miio_device', 'aqi') }}"

###############
# SQL Queries #
###############

- platform: sql
  db_url: !secret db_mysql_url
  queries:
    - name: COVID 24
      unit_of_measurement: infectats
      query: |
        SELECT (ROUND(CAST(now.state AS INT)) - 
            (SELECT ROUND(CAST(yesterday.state AS INT))
              FROM states yesterday 
              WHERE yesterday.entity_id = 'sensor.spain_coronavirus_confirmed' AND state <> 0
              AND yesterday.created < NOW() - INTERVAL 1 DAY 
              ORDER BY yesterday.created DESC LIMIT 1
            )
        ) AS state
        FROM states now  
        WHERE now.entity_id = 'sensor.spain_coronavirus_confirmed' AND state <> 0
        ORDER BY now.created DESC LIMIT 1;
      column: 'state'
#     - name: Exterior Temperature (MAX)
#       unit_of_measurement: ºC
#       query: "SELECT ROUND(MAX(CAST(state AS FLOAT)), 1) AS state FROM states WHERE entity_id = 'sensor.exterior_temperature';"
#       column: 'state'
#     - name: Exterior Temperature (MIN)
#       unit_of_measurement: ºC
#       query: "SELECT ROUND(MIN(CAST(state AS FLOAT)), 1) AS state FROM states WHERE entity_id = 'sensor.exterior_temperature' AND state <> 0;"
#       column: 'state'
#     - name: Exterior Temperature (Diff 24h)
#       unit_of_measurement: ºC
#       query: |
#         SELECT (ROUND(CAST(now.state AS FLOAT), 1) - 
#             (SELECT ROUND(CAST(yesterday.state AS FLOAT), 1)
#               FROM states yesterday 
#               WHERE yesterday.entity_id = 'sensor.exterior_temperature' AND state <> 0
#               AND yesterday.created < NOW() - INTERVAL 1 DAY 
#               ORDER BY yesterday.created DESC LIMIT 1
#             )
#         ) AS state
#         FROM states now 
#         WHERE now.entity_id = 'sensor.exterior_temperature' AND state <> 0
#         ORDER BY now.created DESC LIMIT 1;
#       column: 'state'
#     - name: Dormitori Temperature (MAX)
#       unit_of_measurement: ºC
#       query: "SELECT ROUND(MAX(CAST(state AS FLOAT)), 1) AS state FROM states WHERE entity_id = 'sensor.bedroom_sensor_1_temperature';"
#       column: 'state'
#     - name: Dormitori Temperature (MIN)
#       unit_of_measurement: ºC
#       query: "SELECT ROUND(MIN(CAST(state AS FLOAT)), 1) AS state FROM states WHERE entity_id = 'sensor.bedroom_sensor_1_temperature' AND state <> 0;"
#       column: 'state'
#     - name: Dormitori Temperature (Diff 24h)
#       unit_of_measurement: ºC
#       query: |
#         SELECT (ROUND(CAST(now.state AS FLOAT), 1) - 
#             (SELECT ROUND(CAST(yesterday.state AS FLOAT), 1)
#               FROM states yesterday 
#               WHERE yesterday.entity_id = 'sensor.bedroom_sensor_1_temperature' AND state <> 0
#               AND yesterday.created < NOW() - INTERVAL 1 DAY 
#               ORDER BY yesterday.created DESC LIMIT 1
#             )
#         ) AS state
#         FROM states now  
#         WHERE now.entity_id = 'sensor.bedroom_sensor_1_temperature' AND state <> 0
#         ORDER BY now.created DESC LIMIT 1;
#       column: 'state'
#     - name: Menjador Temperature (MAX)
#       unit_of_measurement: ºC
#       query: "SELECT ROUND(MAX(CAST(state AS FLOAT)), 1) AS state FROM states WHERE entity_id = 'sensor.livingroom_sensor_1_temperature';"
#       column: 'state'
#     - name: Menjador Temperature (MIN)
#       unit_of_measurement: ºC
#       query: "SELECT ROUND(MIN(CAST(state AS FLOAT)), 1) AS state FROM states WHERE entity_id = 'sensor.livingroom_sensor_1_temperature' AND state <> 0;"
#       column: 'state'
#     - name: Menjador Temperature (Diff 24h)
#       unit_of_measurement: ºC
#       query: |
#         SELECT (ROUND(CAST(now.state AS FLOAT), 1) - 
#             (SELECT ROUND(CAST(yesterday.state AS FLOAT), 1)
#               FROM states yesterday 
#               WHERE yesterday.entity_id = 'sensor.livingroom_sensor_1_temperature' AND state <> 0
#               AND yesterday.created < NOW() - INTERVAL 1 DAY 
#               ORDER BY yesterday.created DESC LIMIT 1
#             )
#         ) AS state
#         FROM states now 
#         WHERE now.entity_id = 'sensor.livingroom_sensor_1_temperature' AND state <> 0
#         ORDER BY now.created DESC LIMIT 1;
#       column: 'state'


## Zigbee2mqtt
- platform: mqtt
  name: Bridge state
  state_topic: "zigbee2mqtt/bridge/state"
  icon: mdi:router-wireless
- platform: mqtt
  name: Zigbee2mqtt Version
  state_topic: "zigbee2mqtt/bridge/config"
  value_template: "{{ value_json.version }}"
  icon: mdi:zigbee
- platform: mqtt
  name: Zigbee2mqtt Networkmap
  # if you change base_topic of Zigbee2mqtt, change state_topic accordingly
  state_topic: zigbee2mqtt/bridge/networkmap/raw
  value_template: >-
    {{ now().strftime('%Y-%m-%d %H:%M:%S') }}
  # again, if you change base_topic of Zigbee2mqtt, change json_attributes_topic accordingly
  json_attributes_topic: zigbee2mqtt/bridge/networkmap/raw
# Sensor for Showing the Coordinator Version
- platform: mqtt
  name: Coordinator Version
  state_topic: "zigbee2mqtt/bridge/config"
  value_template: "{{ value_json.coordinator }}"
  icon: mdi:chip
